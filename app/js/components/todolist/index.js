import React, { Component } from 'react';
import { connect } from 'react-redux';
import * as actions from '../../actions';
import TodoList from './TodoList.js';
import { getVisibleTodos } from '../../reducers';

class VisibleTodoList extends Component {
	componentDidMount() {
		this.fetchData();
	}

	componentDidUpdate(prevProps) {
		if (this.props.filter !== prevProps.filter) this.fetchData();
	}

	fetchData() {
		const { filter, fetchTodos } = this.props;
		fetchTodos(filter);
	}

	render() {
		const { toggleTodo, ...rest } = this.props;
		return (
			<TodoList 
			  {...rest} 
			  onTodoClick={toggleTodo} 
			/>
		);
	};
}

const mapStateToProps = (state, ownProps) => ({
  todos: getVisibleTodos(state, state.visibilityFilter),
  filter: state.visibilityFilter
});

const mapDispatchToProps = (dispatch) => ({
  onTodoClick(id) {
    dispatch(toggleTodo(id));
  }
});

// Container generated by Connect subscribes to the store
// and passes the props to the VisibleTodoList component
export default connect(
  mapStateToProps,
  // mapDispatchToProps
  // Shorthand for mapDispatchToProps, if the parameters passed to 
  // dispatch function is same as arguments recieved
  // { onTodoClick : toggleTodo, receiveTodos }
  // Alternatively
  actions
)(VisibleTodoList);